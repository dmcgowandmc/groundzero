---
#Create the minimum security groups
- name: 'Create {{ vpc_cfg.sg_ssh_ext.description }}'
  ec2_group.py: #Specifically using the 2.0 version of ec2_group. File exists in library directory
    name: "{{ vpc_cfg.sg_ssh_ext.name }}"
    description: "{{ vpc_cfg.sg_ssh_ext.description }}"
    vpc_id: "{{ vpc.vpc_id }}"
    region: "{{ vpc_cfg.region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ vpc_cfg.sg_common.cidr }}"
    purge_rules_egress: true
  register: sg_ssh_ext
- name: 'Create {{ vpc_cfg.sg_management.description }}'
  ec2_group.py: #Specifically using the 2.0 version of ec2_group. File exists in library directory
    name: "{{ vpc_cfg.sg_management.name }}"
    description: "{{ vpc_cfg.sg_management.description }}"
    vpc_id: "{{ vpc.vpc_id }}"
    region: "{{ vpc_cfg.region }}"
    rules_egress:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ vpc_cfg.sg_common.cidr }}"
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: "{{ vpc_cfg.sg_common.cidr }}"
  register: sg_management
- name: 'Create {{ vpc_cfg.sg_inout_common.description }}'
  ec2_group.py: #Specifically using the 2.0 version of ec2_group. File exists in library directory
    name: "{{ vpc_cfg.sg_inout_common.name }}"
    description: "{{ vpc_cfg.sg_inout_common.description }}"
    vpc_id: "{{ vpc.vpc_id }}"
    region: "{{ vpc_cfg.region }}"
    rules:
      - proto: icmp
        from_port: -1
        to_port: -1
        cidr_ip: "{{ vpc_cfg.sg_common.cidr }}"
      - proto: tcp
        from_port: 22
        to_port: 22
        group_id: "{{ sg_management.group_id }}"
    rules_egress:
      - proto: icmp
        from_port: -1
        to_port: -1
        cidr_ip: "{{ vpc_cfg.sg_common.cidr }}"
      - proto: tcp
        to_port: 22
        from_port: 22
        cidr_ip: "{{ vpc_cfg.sg_common.cidr }}"
      - proto: tcp
        from_port: 53
        to_port: 53
        cidr_ip: "{{ vpc_cfg.sg_common.cidr }}"
      - proto: udp
        from_port: 53
        to_port: 53
        cidr_ip: "{{ vpc_cfg.sg_common.cidr }}"
  register: sg_inout_common
